# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: PowerShell@2
  displayName: 'Pester Tests'
  inputs:
    targetType: 'inline'
    script: |
      Install-Module Pester -Force
      Import-Module Pester -Force
      $result = Invoke-Pester -CodeCoverage ./nexus.psm1 -Show None -PassThru
      if($result.FailedCount -gt 0) {
        $result.TestResult | Where-Object {$_.Result -ne "Passed"}
        Exit 1
      }
      else {
        write-output $result.TestResult
      }
      write-output "`n`n----------------Missed Commands----------------`n"
      write-output $result.CodeCoverage.MissedCommands
      write-output "`n----------------Missed Commands----------------`n`n`n"
      $coverage = $(100*$($result.CodeCoverage.NumberOfCommandsExecuted)/$($result.CodeCoverage.NumberOfCommandsAnalyzed))
      write-host "Code coverage :  % $coverage"
      if($coverage -lt 30) {
          Write-Host "Code coverage should be minimum %40"
          Exit 1
      }
    failOnStderr: true
    pwsh: true

- task: PowerShell@2
  displayName: 'Code Review'
  inputs:
    targetType: 'inline'
    script: |
      Install-Module PSScriptAnalyzer -Force
      $codeReview = Invoke-ScriptAnalyzer -Path . -IncludeDefaultRules -RecurseCustomRulePath
      write-output $codeReview
      if(($codeReview |  Where-Object{$_.Severity -eq "Error"}).Count -gt 0) {
          Exit 1
      }
    failOnStderr: true
    pwsh: true

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Pipeline.Workspace)'
    artifact: 'nexus-artifacts'